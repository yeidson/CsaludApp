// <auto-generated />
using System;
using CsaludApp.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CsaludApp.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Consent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DentistId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("PatientId");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("DentistId");

                    b.HasIndex("PatientId");

                    b.ToTable("Consents");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Dentist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FixedPhone")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Dentists");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Diagnosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeDx")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("ConsentId");

                    b.Property<string>("NameDx")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ConsentId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Born");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PatientId");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodePx")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("ConsentId");

                    b.Property<string>("NamePx")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ConsentId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Consent", b =>
                {
                    b.HasOne("CsaludApp.Web.Data.Entities.Dentist", "Dentist")
                        .WithMany("Consents")
                        .HasForeignKey("DentistId");

                    b.HasOne("CsaludApp.Web.Data.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Diagnosis", b =>
                {
                    b.HasOne("CsaludApp.Web.Data.Entities.Consent", "Consent")
                        .WithMany("Diagnoses")
                        .HasForeignKey("ConsentId");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Patient", b =>
                {
                    b.HasOne("CsaludApp.Web.Data.Entities.Patient")
                        .WithMany("Patients")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("CsaludApp.Web.Data.Entities.Process", b =>
                {
                    b.HasOne("CsaludApp.Web.Data.Entities.Consent", "Consent")
                        .WithMany("Processes")
                        .HasForeignKey("ConsentId");
                });
#pragma warning restore 612, 618
        }
    }
}
